import gym
import numpy as np
import pandas as pd
import yfinance as yf

# Define the environment
class StockTradingEnvironment(gym.Env):
    def __init__(self, symbol, start_date, end_date):
        self.df = yf.download(symbol, start=start_date, end=end_date)
        self.df = self.df.drop(columns=['Adj Close'])
        self.n_step = len(self.df)
        self.current_step = None
        self.reward_range = (-np.inf, np.inf)
        self.action_space = gym.spaces.Discrete(3)  # Sell, Hold, Buy
        self.observation_space = gym.spaces.Box(
            low=0, high=1, shape=(5,), dtype=np.float16
        )

    def reset(self):
        self.current_step = 0
        return self._next_observation()

    def _next_observation(self):
        obs = self.df.iloc[self.current_step].values
        return obs

    def step(self, action):
        self.current_step += 1
        reward = 0
        done = False
        info = {}

        if action == 0:  # Sell
            reward = self.df.iloc[self.current_step]['Close'] - self.df.iloc[self.current_step-1]['Close']
        elif action == 1:  # Hold
            reward = 0
        elif action == 2:  # Buy
            reward = self.df.iloc[self.current_step-1]['Close'] - self.df.iloc[self.current_step]['Close']

        if self.current_step == self.n_step-1:
            done = True

        obs = self._next_observation()

        return obs, reward, done, info
